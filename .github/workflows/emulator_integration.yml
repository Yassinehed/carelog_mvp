name: Emulator-backed Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  emulator-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.os == 'Windows' && '~\\.pub-cache' || '~/.pub-cache' }}
            ${{ runner.os == 'Windows' && '~\\.pub-cache\\hosted' || '~/.pub-cache/hosted' }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'

      - name: Install dependencies
        run: |
          flutter pub get

      - name: Run emulator-backed integration tests
        id: run-tests
        env:
          # Ensure Admin SDK picks up a project id for seeding against the emulators
          GCLOUD_PROJECT: carelog-mv
          GOOGLE_CLOUD_PROJECT: carelog-mv
        run: |
          echo "Runner OS: $RUNNER_OS"
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            # On Windows use PowerShell style commands and node.exe for seeder
            if (Test-Path scripts\seed_emulator.ps1) {
              Write-Host "Found PowerShell seeder script"
              # If a PowerShell seeder exists prefer it
              firebase emulators:exec --only auth,firestore --project=carelog-mv "powershell -NoProfile -Command \".\\scripts\\seed_emulator.ps1; flutter test integration_test/emulator_integration_test.dart\"" 2>&1 | Tee-Object -FilePath emulators-local.log
            } elseif (Test-Path scripts\seed_emulator.bat) {
              Write-Host "Found batch seeder script"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "cmd /c \"scripts\\seed_emulator.bat && flutter test integration_test/emulator_integration_test.dart\"" 2>&1 | Tee-Object -FilePath emulators-local.log
            } elseif (Test-Path scripts\seed_firestore.js) {
              Write-Host "Found node seeder: scripts\\seed_firestore.js"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "cmd /c \"node.exe scripts\\seed_firestore.js && flutter test integration_test\\emulator_integration_test.dart\"" 2>&1 | Tee-Object -FilePath emulators-local.log
            } else {
              Write-Host "No seeder found; running tests directly"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "cmd /c \"flutter test integration_test\\emulator_integration_test.dart\"" 2>&1 | Tee-Object -FilePath emulators-local.log
            }
          else
            # Linux / macOS path
            if [ -f scripts/seed_emulator.sh ]; then
              echo "Found seeder: scripts/seed_emulator.sh"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "bash -lc 'bash scripts/seed_emulator.sh && flutter test integration_test/emulator_integration_test.dart'" 2>&1 | tee emulators-local.log
            elif [ -f scripts/seed_firestore.js ]; then
              echo "Found node seeder: scripts/seed_firestore.js"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "bash -lc 'node scripts/seed_firestore.js && flutter test integration_test/emulator_integration_test.dart'" 2>&1 | tee emulators-local.log
            else
              echo "No seeder script found; running tests directly"
              firebase emulators:exec --only auth,firestore --project=carelog-mv "bash -lc 'flutter test integration_test/emulator_integration_test.dart'" 2>&1 | tee emulators-local.log
            fi
          fi

      - name: Upload emulator logs (always)
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: |
            emulators-local.log
            firebase-debug.log
            # include any emulator debug outputs that may exist
            emulators/**/debug.log
